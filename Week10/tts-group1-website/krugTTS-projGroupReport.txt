This is a general report of my contributions within the final group project of the Foundational
Java programming class presented by Tech Talent South. The link of the project can be found here:
https://github.com/PTroyP/final_group_project_TTS

My basic role was primary actor of the "Build Team". The Build Team was the last of the three
teams conceptualized. Our mission was to get the project that the Design and Support team had
come up with and actually have it running on a physical server, so that the site we had all
collabratively built would be able to be accessed by everyone on the world-wide web. This
process involved these basic steps:

1. Having a physical server to work with
2. Accessing that server with a program called `ssh` to control the system remotely, which ensues:
3. Tranfering the files of the project onto the server with a program called `git`.
4. Using `java`, (yes, the program itself) on the command line  to launch the files through the
compiled source code (bytecode) generated by the Java Virtual Machine (JVM) to get it running
remotely.

This was the inital plan, anyway. The problem was figuring out why step four didn't work.
I worked with my instructor to solve this problem for hours, to no avail.
The next day, I worked with the rest of the Build Team to find a solution to this problem, with
me being the primary operator and driver of the operation. I was the one who was familiar with
how Linux and its surround software worked to begin with. I did my best to support my team and
teach them of course, this was a team operation after all. In the end, however, the team relied
on me to carry through and get the job done.

The solution, it turned out, was actually very simple. This was no normal Java project, after all.
This was a Java project that utilized Spring Boot, which was a technology that enabled Java to run
as standalone, production-grade applications. With it, it was bundled with a program called Maven
(`mvn`), which was a build automation tool for Java projects. Both of these combined enabled the 
ability to make websites with advanced functionaly that managed crucial information. In context,
Java Spring Boot projects built with Maven was ran and deployed differently than any project my
class had run before. I was to be the first one to figure this out, and actually make it happen.
And so, to end the course, we have an actual website that our class could access. It was awesome,
truth be told.

To make a long story short, the process was something that I documentmented here:
https://github.com/PTroyP/final_group_project_TTS/blob/main/docRunSpringBootAppCMDLine.md
For anyone wished to replicate the process with our project, and could use as a reference for
their own endeavors. It was work, but in the end, I was satisfied that I had such a crucial role
for my team's process. It was my first experience that I had working with a team through the
AGILE framework, and it will be a memory that I will hold with sincerity forever.
